{"version":3,"sources":["../node_modules/@codemirror/legacy-modes/mode/css.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","mkCSS","parserConfig","type","override","inline","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","defaults","tokenHooks","documentTypes","mediaTypes","mediaFeatures","mediaValueKeywords","propertyKeywords","nonStandardPropertyKeywords","fontProperties","counterDescriptors","colorKeywords","valueKeywords","allowNested","lineComment","supportsAtComponent","highlightNonStandardPropertyKeywords","ret","style","tp","tokenBase","stream","state","ch","next","result","eatWhile","current","eat","tokenize","tokenString","match","test","tokenParenthesized","peek","quote","escaped","backUp","Context","indent","prev","this","pushContext","context","indentation","indentUnit","popContext","pass","states","popAndPass","n","wordAsValue","word","toLowerCase","hasOwnProperty","stateArg","charAt","top","_stream","atBlock","startState","token","eatSpace","textAfter","iCx","cx","Math","max","unit","languageData","indentOnInput","commentTokens","line","block","open","close","autocomplete","allWords","keySet","array","documentTypes_","mediaTypes_","mediaFeatures_","mediaValueKeywords_","propertyKeywords_","nonStandardPropertyKeywords_","colorKeywords_","valueKeywords_","concat","tokenCComment","css","maybeEnd","sCSS","skipToEnd","less","gss"],"mappings":"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","file":"static/js/2.d909453e.chunk.js","sourcesContent":["import _defineProperty from \"/Users/msfew/markd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport function mkCSS(parserConfig) {\n  parserConfig = _objectSpread({}, defaults, {}, parserConfig);\n  var inline = parserConfig.inline;\n  var tokenHooks = parserConfig.tokenHooks,\n      documentTypes = parserConfig.documentTypes || {},\n      mediaTypes = parserConfig.mediaTypes || {},\n      mediaFeatures = parserConfig.mediaFeatures || {},\n      mediaValueKeywords = parserConfig.mediaValueKeywords || {},\n      propertyKeywords = parserConfig.propertyKeywords || {},\n      nonStandardPropertyKeywords = parserConfig.nonStandardPropertyKeywords || {},\n      fontProperties = parserConfig.fontProperties || {},\n      counterDescriptors = parserConfig.counterDescriptors || {},\n      colorKeywords = parserConfig.colorKeywords || {},\n      valueKeywords = parserConfig.valueKeywords || {},\n      allowNested = parserConfig.allowNested,\n      lineComment = parserConfig.lineComment,\n      supportsAtComponent = parserConfig.supportsAtComponent === true,\n      highlightNonStandardPropertyKeywords = parserConfig.highlightNonStandardPropertyKeywords !== false;\n  var type, override;\n\n  function ret(style, tp) {\n    type = tp;\n    return style;\n  } // Tokenizers\n\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n\n    if (tokenHooks[ch]) {\n      var result = tokenHooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n\n    if (ch == \"@\") {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"def\", stream.current());\n    } else if (ch == \"=\" || (ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) {\n      return ret(null, \"compare\");\n    } else if (ch == \"\\\"\" || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \"#\") {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"atom\", \"hash\");\n    } else if (ch == \"!\") {\n      stream.match(/^\\s*\\w*/);\n      return ret(\"keyword\", \"important\");\n    } else if (/\\d/.test(ch) || ch == \".\" && stream.eat(/\\d/)) {\n      stream.eatWhile(/[\\w.%]/);\n      return ret(\"number\", \"unit\");\n    } else if (ch === \"-\") {\n      if (/[\\d.]/.test(stream.peek())) {\n        stream.eatWhile(/[\\w.%]/);\n        return ret(\"number\", \"unit\");\n      } else if (stream.match(/^-[\\w\\\\\\-]*/)) {\n        stream.eatWhile(/[\\w\\\\\\-]/);\n        if (stream.match(/^\\s*:/, false)) return ret(\"def\", \"variable-definition\");\n        return ret(\"variableName\", \"variable\");\n      } else if (stream.match(/^\\w+-/)) {\n        return ret(\"meta\", \"meta\");\n      }\n    } else if (/[,+>*\\/]/.test(ch)) {\n      return ret(null, \"select-op\");\n    } else if (ch == \".\" && stream.match(/^-?[_a-z][_a-z0-9-]*/i)) {\n      return ret(\"qualifier\", \"qualifier\");\n    } else if (/[:;{}\\[\\]\\(\\)]/.test(ch)) {\n      return ret(null, ch);\n    } else if (stream.match(/^[\\w-.]+(?=\\()/)) {\n      if (/^(url(-prefix)?|domain|regexp)$/i.test(stream.current())) {\n        state.tokenize = tokenParenthesized;\n      }\n\n      return ret(\"variableName.function\", \"variable\");\n    } else if (/[\\w\\\\\\-]/.test(ch)) {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"property\", \"word\");\n    } else {\n      return ret(null, null);\n    }\n  }\n\n  function tokenString(quote) {\n    return function (stream, state) {\n      var escaped = false,\n          ch;\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) {\n          if (quote == \")\") stream.backUp(1);\n          break;\n        }\n\n        escaped = !escaped && ch == \"\\\\\";\n      }\n\n      if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenParenthesized(stream, state) {\n    stream.next(); // Must be '('\n\n    if (!stream.match(/^\\s*[\\\"\\')]/, false)) state.tokenize = tokenString(\")\");else state.tokenize = null;\n    return ret(null, \"(\");\n  } // Context management\n\n\n  function Context(type, indent, prev) {\n    this.type = type;\n    this.indent = indent;\n    this.prev = prev;\n  }\n\n  function pushContext(state, stream, type, indent) {\n    state.context = new Context(type, stream.indentation() + (indent === false ? 0 : stream.indentUnit), state.context);\n    return type;\n  }\n\n  function popContext(state) {\n    if (state.context.prev) state.context = state.context.prev;\n    return state.context.type;\n  }\n\n  function pass(type, stream, state) {\n    return states[state.context.type](type, stream, state);\n  }\n\n  function popAndPass(type, stream, state, n) {\n    for (var i = n || 1; i > 0; i--) {\n      state.context = state.context.prev;\n    }\n\n    return pass(type, stream, state);\n  } // Parser\n\n\n  function wordAsValue(stream) {\n    var word = stream.current().toLowerCase();\n    if (valueKeywords.hasOwnProperty(word)) override = \"atom\";else if (colorKeywords.hasOwnProperty(word)) override = \"keyword\";else override = \"variable\";\n  }\n\n  var states = {};\n\n  states.top = function (type, stream, state) {\n    if (type == \"{\") {\n      return pushContext(state, stream, \"block\");\n    } else if (type == \"}\" && state.context.prev) {\n      return popContext(state);\n    } else if (supportsAtComponent && /@component/i.test(type)) {\n      return pushContext(state, stream, \"atComponentBlock\");\n    } else if (/^@(-moz-)?document$/i.test(type)) {\n      return pushContext(state, stream, \"documentTypes\");\n    } else if (/^@(media|supports|(-moz-)?document|import)$/i.test(type)) {\n      return pushContext(state, stream, \"atBlock\");\n    } else if (/^@(font-face|counter-style)/i.test(type)) {\n      state.stateArg = type;\n      return \"restricted_atBlock_before\";\n    } else if (/^@(-(moz|ms|o|webkit)-)?keyframes$/i.test(type)) {\n      return \"keyframes\";\n    } else if (type && type.charAt(0) == \"@\") {\n      return pushContext(state, stream, \"at\");\n    } else if (type == \"hash\") {\n      override = \"builtin\";\n    } else if (type == \"word\") {\n      override = \"tag\";\n    } else if (type == \"variable-definition\") {\n      return \"maybeprop\";\n    } else if (type == \"interpolation\") {\n      return pushContext(state, stream, \"interpolation\");\n    } else if (type == \":\") {\n      return \"pseudo\";\n    } else if (allowNested && type == \"(\") {\n      return pushContext(state, stream, \"parens\");\n    }\n\n    return state.context.type;\n  };\n\n  states.block = function (type, stream, state) {\n    if (type == \"word\") {\n      var word = stream.current().toLowerCase();\n\n      if (propertyKeywords.hasOwnProperty(word)) {\n        override = \"property\";\n        return \"maybeprop\";\n      } else if (nonStandardPropertyKeywords.hasOwnProperty(word)) {\n        override = highlightNonStandardPropertyKeywords ? \"string.special\" : \"property\";\n        return \"maybeprop\";\n      } else if (allowNested) {\n        override = stream.match(/^\\s*:(?:\\s|$)/, false) ? \"property\" : \"tag\";\n        return \"block\";\n      } else {\n        override = \"error\";\n        return \"maybeprop\";\n      }\n    } else if (type == \"meta\") {\n      return \"block\";\n    } else if (!allowNested && (type == \"hash\" || type == \"qualifier\")) {\n      override = \"error\";\n      return \"block\";\n    } else {\n      return states.top(type, stream, state);\n    }\n  };\n\n  states.maybeprop = function (type, stream, state) {\n    if (type == \":\") return pushContext(state, stream, \"prop\");\n    return pass(type, stream, state);\n  };\n\n  states.prop = function (type, stream, state) {\n    if (type == \";\") return popContext(state);\n    if (type == \"{\" && allowNested) return pushContext(state, stream, \"propBlock\");\n    if (type == \"}\" || type == \"{\") return popAndPass(type, stream, state);\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\n\n    if (type == \"hash\" && !/^#([0-9a-fA-f]{3,4}|[0-9a-fA-f]{6}|[0-9a-fA-f]{8})$/.test(stream.current())) {\n      override = \"error\";\n    } else if (type == \"word\") {\n      wordAsValue(stream);\n    } else if (type == \"interpolation\") {\n      return pushContext(state, stream, \"interpolation\");\n    }\n\n    return \"prop\";\n  };\n\n  states.propBlock = function (type, _stream, state) {\n    if (type == \"}\") return popContext(state);\n\n    if (type == \"word\") {\n      override = \"property\";\n      return \"maybeprop\";\n    }\n\n    return state.context.type;\n  };\n\n  states.parens = function (type, stream, state) {\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n    if (type == \")\") return popContext(state);\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n    if (type == \"word\") wordAsValue(stream);\n    return \"parens\";\n  };\n\n  states.pseudo = function (type, stream, state) {\n    if (type == \"meta\") return \"pseudo\";\n\n    if (type == \"word\") {\n      override = \"variableName.constant\";\n      return state.context.type;\n    }\n\n    return pass(type, stream, state);\n  };\n\n  states.documentTypes = function (type, stream, state) {\n    if (type == \"word\" && documentTypes.hasOwnProperty(stream.current())) {\n      override = \"tag\";\n      return state.context.type;\n    } else {\n      return states.atBlock(type, stream, state);\n    }\n  };\n\n  states.atBlock = function (type, stream, state) {\n    if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n    if (type == \"}\" || type == \";\") return popAndPass(type, stream, state);\n    if (type == \"{\") return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\");\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n\n    if (type == \"word\") {\n      var word = stream.current().toLowerCase();\n      if (word == \"only\" || word == \"not\" || word == \"and\" || word == \"or\") override = \"keyword\";else if (mediaTypes.hasOwnProperty(word)) override = \"attribute\";else if (mediaFeatures.hasOwnProperty(word)) override = \"property\";else if (mediaValueKeywords.hasOwnProperty(word)) override = \"keyword\";else if (propertyKeywords.hasOwnProperty(word)) override = \"property\";else if (nonStandardPropertyKeywords.hasOwnProperty(word)) override = highlightNonStandardPropertyKeywords ? \"string.special\" : \"property\";else if (valueKeywords.hasOwnProperty(word)) override = \"atom\";else if (colorKeywords.hasOwnProperty(word)) override = \"keyword\";else override = \"error\";\n    }\n\n    return state.context.type;\n  };\n\n  states.atComponentBlock = function (type, stream, state) {\n    if (type == \"}\") return popAndPass(type, stream, state);\n    if (type == \"{\") return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\", false);\n    if (type == \"word\") override = \"error\";\n    return state.context.type;\n  };\n\n  states.atBlock_parens = function (type, stream, state) {\n    if (type == \")\") return popContext(state);\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state, 2);\n    return states.atBlock(type, stream, state);\n  };\n\n  states.restricted_atBlock_before = function (type, stream, state) {\n    if (type == \"{\") return pushContext(state, stream, \"restricted_atBlock\");\n\n    if (type == \"word\" && state.stateArg == \"@counter-style\") {\n      override = \"variable\";\n      return \"restricted_atBlock_before\";\n    }\n\n    return pass(type, stream, state);\n  };\n\n  states.restricted_atBlock = function (type, stream, state) {\n    if (type == \"}\") {\n      state.stateArg = null;\n      return popContext(state);\n    }\n\n    if (type == \"word\") {\n      if (state.stateArg == \"@font-face\" && !fontProperties.hasOwnProperty(stream.current().toLowerCase()) || state.stateArg == \"@counter-style\" && !counterDescriptors.hasOwnProperty(stream.current().toLowerCase())) override = \"error\";else override = \"property\";\n      return \"maybeprop\";\n    }\n\n    return \"restricted_atBlock\";\n  };\n\n  states.keyframes = function (type, stream, state) {\n    if (type == \"word\") {\n      override = \"variable\";\n      return \"keyframes\";\n    }\n\n    if (type == \"{\") return pushContext(state, stream, \"top\");\n    return pass(type, stream, state);\n  };\n\n  states.at = function (type, stream, state) {\n    if (type == \";\") return popContext(state);\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n    if (type == \"word\") override = \"tag\";else if (type == \"hash\") override = \"builtin\";\n    return \"at\";\n  };\n\n  states.interpolation = function (type, stream, state) {\n    if (type == \"}\") return popContext(state);\n    if (type == \"{\" || type == \";\") return popAndPass(type, stream, state);\n    if (type == \"word\") override = \"variable\";else if (type != \"variable\" && type != \"(\" && type != \")\") override = \"error\";\n    return \"interpolation\";\n  };\n\n  return {\n    startState: function startState() {\n      return {\n        tokenize: null,\n        state: inline ? \"block\" : \"top\",\n        stateArg: null,\n        context: new Context(inline ? \"block\" : \"top\", 0, null)\n      };\n    },\n    token: function token(stream, state) {\n      if (!state.tokenize && stream.eatSpace()) return null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n\n      if (style && typeof style == \"object\") {\n        type = style[1];\n        style = style[0];\n      }\n\n      override = style;\n      if (type != \"comment\") state.state = states[state.state](type, stream, state);\n      return override;\n    },\n    indent: function indent(state, textAfter, iCx) {\n      var cx = state.context,\n          ch = textAfter && textAfter.charAt(0);\n      var indent = cx.indent;\n      if (cx.type == \"prop\" && (ch == \"}\" || ch == \")\")) cx = cx.prev;\n\n      if (cx.prev) {\n        if (ch == \"}\" && (cx.type == \"block\" || cx.type == \"top\" || cx.type == \"interpolation\" || cx.type == \"restricted_atBlock\")) {\n          // Resume indentation from parent context.\n          cx = cx.prev;\n          indent = cx.indent;\n        } else if (ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") || ch == \"{\" && (cx.type == \"at\" || cx.type == \"atBlock\")) {\n          // Dedent relative to current context.\n          indent = Math.max(0, cx.indent - iCx.unit);\n        }\n      }\n\n      return indent;\n    },\n    languageData: {\n      indentOnInput: /^\\s*\\}$/,\n      commentTokens: {\n        line: lineComment,\n        block: {\n          open: \"/*\",\n          close: \"*/\"\n        }\n      },\n      autocomplete: allWords\n    }\n  };\n}\n;\n\nfunction keySet(array) {\n  var keys = {};\n\n  for (var i = 0; i < array.length; ++i) {\n    keys[array[i].toLowerCase()] = true;\n  }\n\n  return keys;\n}\n\nvar documentTypes_ = [\"domain\", \"regexp\", \"url\", \"url-prefix\"],\n    documentTypes = keySet(documentTypes_);\nvar mediaTypes_ = [\"all\", \"aural\", \"braille\", \"handheld\", \"print\", \"projection\", \"screen\", \"tty\", \"tv\", \"embossed\"],\n    mediaTypes = keySet(mediaTypes_);\nvar mediaFeatures_ = [\"width\", \"min-width\", \"max-width\", \"height\", \"min-height\", \"max-height\", \"device-width\", \"min-device-width\", \"max-device-width\", \"device-height\", \"min-device-height\", \"max-device-height\", \"aspect-ratio\", \"min-aspect-ratio\", \"max-aspect-ratio\", \"device-aspect-ratio\", \"min-device-aspect-ratio\", \"max-device-aspect-ratio\", \"color\", \"min-color\", \"max-color\", \"color-index\", \"min-color-index\", \"max-color-index\", \"monochrome\", \"min-monochrome\", \"max-monochrome\", \"resolution\", \"min-resolution\", \"max-resolution\", \"scan\", \"grid\", \"orientation\", \"device-pixel-ratio\", \"min-device-pixel-ratio\", \"max-device-pixel-ratio\", \"pointer\", \"any-pointer\", \"hover\", \"any-hover\", \"prefers-color-scheme\"],\n    mediaFeatures = keySet(mediaFeatures_);\nvar mediaValueKeywords_ = [\"landscape\", \"portrait\", \"none\", \"coarse\", \"fine\", \"on-demand\", \"hover\", \"interlace\", \"progressive\", \"dark\", \"light\"],\n    mediaValueKeywords = keySet(mediaValueKeywords_);\nvar propertyKeywords_ = [\"align-content\", \"align-items\", \"align-self\", \"alignment-adjust\", \"alignment-baseline\", \"all\", \"anchor-point\", \"animation\", \"animation-delay\", \"animation-direction\", \"animation-duration\", \"animation-fill-mode\", \"animation-iteration-count\", \"animation-name\", \"animation-play-state\", \"animation-timing-function\", \"appearance\", \"azimuth\", \"backdrop-filter\", \"backface-visibility\", \"background\", \"background-attachment\", \"background-blend-mode\", \"background-clip\", \"background-color\", \"background-image\", \"background-origin\", \"background-position\", \"background-position-x\", \"background-position-y\", \"background-repeat\", \"background-size\", \"baseline-shift\", \"binding\", \"bleed\", \"block-size\", \"bookmark-label\", \"bookmark-level\", \"bookmark-state\", \"bookmark-target\", \"border\", \"border-bottom\", \"border-bottom-color\", \"border-bottom-left-radius\", \"border-bottom-right-radius\", \"border-bottom-style\", \"border-bottom-width\", \"border-collapse\", \"border-color\", \"border-image\", \"border-image-outset\", \"border-image-repeat\", \"border-image-slice\", \"border-image-source\", \"border-image-width\", \"border-left\", \"border-left-color\", \"border-left-style\", \"border-left-width\", \"border-radius\", \"border-right\", \"border-right-color\", \"border-right-style\", \"border-right-width\", \"border-spacing\", \"border-style\", \"border-top\", \"border-top-color\", \"border-top-left-radius\", \"border-top-right-radius\", \"border-top-style\", \"border-top-width\", \"border-width\", \"bottom\", \"box-decoration-break\", \"box-shadow\", \"box-sizing\", \"break-after\", \"break-before\", \"break-inside\", \"caption-side\", \"caret-color\", \"clear\", \"clip\", \"color\", \"color-profile\", \"column-count\", \"column-fill\", \"column-gap\", \"column-rule\", \"column-rule-color\", \"column-rule-style\", \"column-rule-width\", \"column-span\", \"column-width\", \"columns\", \"contain\", \"content\", \"counter-increment\", \"counter-reset\", \"crop\", \"cue\", \"cue-after\", \"cue-before\", \"cursor\", \"direction\", \"display\", \"dominant-baseline\", \"drop-initial-after-adjust\", \"drop-initial-after-align\", \"drop-initial-before-adjust\", \"drop-initial-before-align\", \"drop-initial-size\", \"drop-initial-value\", \"elevation\", \"empty-cells\", \"fit\", \"fit-position\", \"flex\", \"flex-basis\", \"flex-direction\", \"flex-flow\", \"flex-grow\", \"flex-shrink\", \"flex-wrap\", \"float\", \"float-offset\", \"flow-from\", \"flow-into\", \"font\", \"font-family\", \"font-feature-settings\", \"font-kerning\", \"font-language-override\", \"font-optical-sizing\", \"font-size\", \"font-size-adjust\", \"font-stretch\", \"font-style\", \"font-synthesis\", \"font-variant\", \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-east-asian\", \"font-variant-ligatures\", \"font-variant-numeric\", \"font-variant-position\", \"font-variation-settings\", \"font-weight\", \"gap\", \"grid\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\", \"grid-auto-rows\", \"grid-column\", \"grid-column-end\", \"grid-column-gap\", \"grid-column-start\", \"grid-gap\", \"grid-row\", \"grid-row-end\", \"grid-row-gap\", \"grid-row-start\", \"grid-template\", \"grid-template-areas\", \"grid-template-columns\", \"grid-template-rows\", \"hanging-punctuation\", \"height\", \"hyphens\", \"icon\", \"image-orientation\", \"image-rendering\", \"image-resolution\", \"inline-box-align\", \"inset\", \"inset-block\", \"inset-block-end\", \"inset-block-start\", \"inset-inline\", \"inset-inline-end\", \"inset-inline-start\", \"isolation\", \"justify-content\", \"justify-items\", \"justify-self\", \"left\", \"letter-spacing\", \"line-break\", \"line-height\", \"line-height-step\", \"line-stacking\", \"line-stacking-ruby\", \"line-stacking-shift\", \"line-stacking-strategy\", \"list-style\", \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\", \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\", \"marks\", \"marquee-direction\", \"marquee-loop\", \"marquee-play-count\", \"marquee-speed\", \"marquee-style\", \"mask-clip\", \"mask-composite\", \"mask-image\", \"mask-mode\", \"mask-origin\", \"mask-position\", \"mask-repeat\", \"mask-size\", \"mask-type\", \"max-block-size\", \"max-height\", \"max-inline-size\", \"max-width\", \"min-block-size\", \"min-height\", \"min-inline-size\", \"min-width\", \"mix-blend-mode\", \"move-to\", \"nav-down\", \"nav-index\", \"nav-left\", \"nav-right\", \"nav-up\", \"object-fit\", \"object-position\", \"offset\", \"offset-anchor\", \"offset-distance\", \"offset-path\", \"offset-position\", \"offset-rotate\", \"opacity\", \"order\", \"orphans\", \"outline\", \"outline-color\", \"outline-offset\", \"outline-style\", \"outline-width\", \"overflow\", \"overflow-style\", \"overflow-wrap\", \"overflow-x\", \"overflow-y\", \"padding\", \"padding-bottom\", \"padding-left\", \"padding-right\", \"padding-top\", \"page\", \"page-break-after\", \"page-break-before\", \"page-break-inside\", \"page-policy\", \"pause\", \"pause-after\", \"pause-before\", \"perspective\", \"perspective-origin\", \"pitch\", \"pitch-range\", \"place-content\", \"place-items\", \"place-self\", \"play-during\", \"position\", \"presentation-level\", \"punctuation-trim\", \"quotes\", \"region-break-after\", \"region-break-before\", \"region-break-inside\", \"region-fragment\", \"rendering-intent\", \"resize\", \"rest\", \"rest-after\", \"rest-before\", \"richness\", \"right\", \"rotate\", \"rotation\", \"rotation-point\", \"row-gap\", \"ruby-align\", \"ruby-overhang\", \"ruby-position\", \"ruby-span\", \"scale\", \"scroll-behavior\", \"scroll-margin\", \"scroll-margin-block\", \"scroll-margin-block-end\", \"scroll-margin-block-start\", \"scroll-margin-bottom\", \"scroll-margin-inline\", \"scroll-margin-inline-end\", \"scroll-margin-inline-start\", \"scroll-margin-left\", \"scroll-margin-right\", \"scroll-margin-top\", \"scroll-padding\", \"scroll-padding-block\", \"scroll-padding-block-end\", \"scroll-padding-block-start\", \"scroll-padding-bottom\", \"scroll-padding-inline\", \"scroll-padding-inline-end\", \"scroll-padding-inline-start\", \"scroll-padding-left\", \"scroll-padding-right\", \"scroll-padding-top\", \"scroll-snap-align\", \"scroll-snap-type\", \"shape-image-threshold\", \"shape-inside\", \"shape-margin\", \"shape-outside\", \"size\", \"speak\", \"speak-as\", \"speak-header\", \"speak-numeral\", \"speak-punctuation\", \"speech-rate\", \"stress\", \"string-set\", \"tab-size\", \"table-layout\", \"target\", \"target-name\", \"target-new\", \"target-position\", \"text-align\", \"text-align-last\", \"text-combine-upright\", \"text-decoration\", \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-skip\", \"text-decoration-skip-ink\", \"text-decoration-style\", \"text-emphasis\", \"text-emphasis-color\", \"text-emphasis-position\", \"text-emphasis-style\", \"text-height\", \"text-indent\", \"text-justify\", \"text-orientation\", \"text-outline\", \"text-overflow\", \"text-rendering\", \"text-shadow\", \"text-size-adjust\", \"text-space-collapse\", \"text-transform\", \"text-underline-position\", \"text-wrap\", \"top\", \"touch-action\", \"transform\", \"transform-origin\", \"transform-style\", \"transition\", \"transition-delay\", \"transition-duration\", \"transition-property\", \"transition-timing-function\", \"translate\", \"unicode-bidi\", \"user-select\", \"vertical-align\", \"visibility\", \"voice-balance\", \"voice-duration\", \"voice-family\", \"voice-pitch\", \"voice-range\", \"voice-rate\", \"voice-stress\", \"voice-volume\", \"volume\", \"white-space\", \"widows\", \"width\", \"will-change\", \"word-break\", \"word-spacing\", \"word-wrap\", \"writing-mode\", \"z-index\", // SVG-specific\n\"clip-path\", \"clip-rule\", \"mask\", \"enable-background\", \"filter\", \"flood-color\", \"flood-opacity\", \"lighting-color\", \"stop-color\", \"stop-opacity\", \"pointer-events\", \"color-interpolation\", \"color-interpolation-filters\", \"color-rendering\", \"fill\", \"fill-opacity\", \"fill-rule\", \"image-rendering\", \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"paint-order\", \"shape-rendering\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\", \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"text-rendering\", \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\", \"glyph-orientation-vertical\", \"text-anchor\", \"writing-mode\"],\n    propertyKeywords = keySet(propertyKeywords_);\nvar nonStandardPropertyKeywords_ = [\"border-block\", \"border-block-color\", \"border-block-end\", \"border-block-end-color\", \"border-block-end-style\", \"border-block-end-width\", \"border-block-start\", \"border-block-start-color\", \"border-block-start-style\", \"border-block-start-width\", \"border-block-style\", \"border-block-width\", \"border-inline\", \"border-inline-color\", \"border-inline-end\", \"border-inline-end-color\", \"border-inline-end-style\", \"border-inline-end-width\", \"border-inline-start\", \"border-inline-start-color\", \"border-inline-start-style\", \"border-inline-start-width\", \"border-inline-style\", \"border-inline-width\", \"margin-block\", \"margin-block-end\", \"margin-block-start\", \"margin-inline\", \"margin-inline-end\", \"margin-inline-start\", \"padding-block\", \"padding-block-end\", \"padding-block-start\", \"padding-inline\", \"padding-inline-end\", \"padding-inline-start\", \"scroll-snap-stop\", \"scrollbar-3d-light-color\", \"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-dark-shadow-color\", \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\", \"scrollbar-track-color\", \"searchfield-cancel-button\", \"searchfield-decoration\", \"searchfield-results-button\", \"searchfield-results-decoration\", \"shape-inside\", \"zoom\"],\n    nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_);\nvar fontProperties_ = [\"font-display\", \"font-family\", \"src\", \"unicode-range\", \"font-variant\", \"font-feature-settings\", \"font-stretch\", \"font-weight\", \"font-style\"],\n    fontProperties = keySet(fontProperties_);\nvar counterDescriptors_ = [\"additive-symbols\", \"fallback\", \"negative\", \"pad\", \"prefix\", \"range\", \"speak-as\", \"suffix\", \"symbols\", \"system\"],\n    counterDescriptors = keySet(counterDescriptors_);\nvar colorKeywords_ = [\"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\", \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\", \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\", \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\", \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\", \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\", \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\", \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\", \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\", \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\", \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\", \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\", \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\", \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\", \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\", \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\", \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\", \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\", \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\", \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\", \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\", \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\", \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\", \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\", \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\", \"whitesmoke\", \"yellow\", \"yellowgreen\"],\n    colorKeywords = keySet(colorKeywords_);\nvar valueKeywords_ = [\"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"afar\", \"after-white-space\", \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\", \"always\", \"amharic\", \"amharic-abegede\", \"antialiased\", \"appworkspace\", \"arabic-indic\", \"armenian\", \"asterisks\", \"attr\", \"auto\", \"auto-flow\", \"avoid\", \"avoid-column\", \"avoid-page\", \"avoid-region\", \"axis-pan\", \"background\", \"backwards\", \"baseline\", \"below\", \"bidi-override\", \"binary\", \"bengali\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\", \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"bullets\", \"button\", \"button-bevel\", \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"cambodian\", \"capitalize\", \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\", \"cell\", \"center\", \"checkbox\", \"circle\", \"cjk-decimal\", \"cjk-earthly-branch\", \"cjk-heavenly-stem\", \"cjk-ideographic\", \"clear\", \"clip\", \"close-quote\", \"col-resize\", \"collapse\", \"color\", \"color-burn\", \"color-dodge\", \"column\", \"column-reverse\", \"compact\", \"condensed\", \"contain\", \"content\", \"contents\", \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"counter\", \"counters\", \"cover\", \"crop\", \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"cyclic\", \"darken\", \"dashed\", \"decimal\", \"decimal-leading-zero\", \"default\", \"default-button\", \"dense\", \"destination-atop\", \"destination-in\", \"destination-out\", \"destination-over\", \"devanagari\", \"difference\", \"disc\", \"discard\", \"disclosure-closed\", \"disclosure-open\", \"document\", \"dot-dash\", \"dot-dot-dash\", \"dotted\", \"double\", \"down\", \"e-resize\", \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\", \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\", \"ethiopic\", \"ethiopic-abegede\", \"ethiopic-abegede-am-et\", \"ethiopic-abegede-gez\", \"ethiopic-abegede-ti-er\", \"ethiopic-abegede-ti-et\", \"ethiopic-halehame-aa-er\", \"ethiopic-halehame-aa-et\", \"ethiopic-halehame-am-et\", \"ethiopic-halehame-gez\", \"ethiopic-halehame-om-et\", \"ethiopic-halehame-sid-et\", \"ethiopic-halehame-so-et\", \"ethiopic-halehame-ti-er\", \"ethiopic-halehame-ti-et\", \"ethiopic-halehame-tig\", \"ethiopic-numeric\", \"ew-resize\", \"exclusion\", \"expanded\", \"extends\", \"extra-condensed\", \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fill-box\", \"fixed\", \"flat\", \"flex\", \"flex-end\", \"flex-start\", \"footnotes\", \"forwards\", \"from\", \"geometricPrecision\", \"georgian\", \"graytext\", \"grid\", \"groove\", \"gujarati\", \"gurmukhi\", \"hand\", \"hangul\", \"hangul-consonant\", \"hard-light\", \"hebrew\", \"help\", \"hidden\", \"hide\", \"higher\", \"highlight\", \"highlighttext\", \"hiragana\", \"hiragana-iroha\", \"horizontal\", \"hsl\", \"hsla\", \"hue\", \"icon\", \"ignore\", \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\", \"infobackground\", \"infotext\", \"inherit\", \"initial\", \"inline\", \"inline-axis\", \"inline-block\", \"inline-flex\", \"inline-grid\", \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\", \"italic\", \"japanese-formal\", \"japanese-informal\", \"justify\", \"kannada\", \"katakana\", \"katakana-iroha\", \"keep-all\", \"khmer\", \"korean-hangul-formal\", \"korean-hanja-formal\", \"korean-hanja-informal\", \"landscape\", \"lao\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"lighten\", \"line-through\", \"linear\", \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\", \"local\", \"logical\", \"loud\", \"lower\", \"lower-alpha\", \"lower-armenian\", \"lower-greek\", \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\", \"lower-roman\", \"lowercase\", \"ltr\", \"luminosity\", \"malayalam\", \"manipulation\", \"match\", \"matrix\", \"matrix3d\", \"media-controls-background\", \"media-current-time-display\", \"media-fullscreen-button\", \"media-mute-button\", \"media-play-button\", \"media-return-to-realtime-button\", \"media-rewind-button\", \"media-seek-back-button\", \"media-seek-forward-button\", \"media-slider\", \"media-sliderthumb\", \"media-time-remaining-display\", \"media-volume-slider\", \"media-volume-slider-container\", \"media-volume-sliderthumb\", \"medium\", \"menu\", \"menulist\", \"menulist-button\", \"menulist-text\", \"menulist-textfield\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\", \"mix\", \"mongolian\", \"monospace\", \"move\", \"multiple\", \"multiple_mask_images\", \"multiply\", \"myanmar\", \"n-resize\", \"narrower\", \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\", \"no-open-quote\", \"no-repeat\", \"none\", \"normal\", \"not-allowed\", \"nowrap\", \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\", \"oblique\", \"octal\", \"opacity\", \"open-quote\", \"optimizeLegibility\", \"optimizeSpeed\", \"oriya\", \"oromo\", \"outset\", \"outside\", \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\", \"painted\", \"page\", \"paused\", \"persian\", \"perspective\", \"pinch-zoom\", \"plus-darker\", \"plus-lighter\", \"pointer\", \"polygon\", \"portrait\", \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\", \"progress\", \"push-button\", \"radial-gradient\", \"radio\", \"read-only\", \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\", \"relative\", \"repeat\", \"repeating-linear-gradient\", \"repeating-radial-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\", \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\", \"rotateZ\", \"round\", \"row\", \"row-resize\", \"row-reverse\", \"rtl\", \"run-in\", \"running\", \"s-resize\", \"sans-serif\", \"saturation\", \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"screen\", \"scroll\", \"scrollbar\", \"scroll-position\", \"se-resize\", \"searchfield\", \"searchfield-cancel-button\", \"searchfield-decoration\", \"searchfield-results-button\", \"searchfield-results-decoration\", \"self-start\", \"self-end\", \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\", \"sidama\", \"simp-chinese-formal\", \"simp-chinese-informal\", \"single\", \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\", \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\", \"small\", \"small-caps\", \"small-caption\", \"smaller\", \"soft-light\", \"solid\", \"somali\", \"source-atop\", \"source-in\", \"source-out\", \"source-over\", \"space\", \"space-around\", \"space-between\", \"space-evenly\", \"spell-out\", \"square\", \"square-button\", \"start\", \"static\", \"status-bar\", \"stretch\", \"stroke\", \"stroke-box\", \"sub\", \"subpixel-antialiased\", \"svg_masks\", \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"system-ui\", \"table\", \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\", \"table-footer-group\", \"table-header-group\", \"table-row\", \"table-row-group\", \"tamil\", \"telugu\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thai\", \"thick\", \"thin\", \"threeddarkshadow\", \"threedface\", \"threedhighlight\", \"threedlightshadow\", \"threedshadow\", \"tibetan\", \"tigre\", \"tigrinya-er\", \"tigrinya-er-abegede\", \"tigrinya-et\", \"tigrinya-et-abegede\", \"to\", \"top\", \"trad-chinese-formal\", \"trad-chinese-informal\", \"transform\", \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\", \"transparent\", \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"unidirectional-pan\", \"unset\", \"up\", \"upper-alpha\", \"upper-armenian\", \"upper-greek\", \"upper-hexadecimal\", \"upper-latin\", \"upper-norwegian\", \"upper-roman\", \"uppercase\", \"urdu\", \"url\", \"var\", \"vertical\", \"vertical-text\", \"view-box\", \"visible\", \"visibleFill\", \"visiblePainted\", \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\", \"window\", \"windowframe\", \"windowtext\", \"words\", \"wrap\", \"wrap-reverse\", \"x-large\", \"x-small\", \"xor\", \"xx-large\", \"xx-small\"],\n    valueKeywords = keySet(valueKeywords_);\nvar allWords = documentTypes_.concat(mediaTypes_).concat(mediaFeatures_).concat(mediaValueKeywords_).concat(propertyKeywords_).concat(nonStandardPropertyKeywords_).concat(colorKeywords_).concat(valueKeywords_);\nvar defaults = {\n  documentTypes: documentTypes,\n  mediaTypes: mediaTypes,\n  mediaFeatures: mediaFeatures,\n  mediaValueKeywords: mediaValueKeywords,\n  propertyKeywords: propertyKeywords,\n  nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n  fontProperties: fontProperties,\n  counterDescriptors: counterDescriptors,\n  colorKeywords: colorKeywords,\n  valueKeywords: valueKeywords,\n  tokenHooks: {\n    \"/\": function _(stream, state) {\n      if (!stream.eat(\"*\")) return false;\n      state.tokenize = tokenCComment;\n      return tokenCComment(stream, state);\n    }\n  }\n};\nexport var css = mkCSS({});\n\nfunction tokenCComment(stream, state) {\n  var maybeEnd = false,\n      ch;\n\n  while ((ch = stream.next()) != null) {\n    if (maybeEnd && ch == \"/\") {\n      state.tokenize = null;\n      break;\n    }\n\n    maybeEnd = ch == \"*\";\n  }\n\n  return [\"comment\", \"comment\"];\n}\n\nexport var sCSS = mkCSS({\n  mediaTypes: mediaTypes,\n  mediaFeatures: mediaFeatures,\n  mediaValueKeywords: mediaValueKeywords,\n  propertyKeywords: propertyKeywords,\n  nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n  colorKeywords: colorKeywords,\n  valueKeywords: valueKeywords,\n  fontProperties: fontProperties,\n  allowNested: true,\n  lineComment: \"//\",\n  tokenHooks: {\n    \"/\": function _(stream, state) {\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return [\"comment\", \"comment\"];\n      } else if (stream.eat(\"*\")) {\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      } else {\n        return [\"operator\", \"operator\"];\n      }\n    },\n    \":\": function _(stream) {\n      if (stream.match(/^\\s*\\{/, false)) return [null, null];\n      return false;\n    },\n    \"$\": function $(stream) {\n      stream.match(/^[\\w-]+/);\n      if (stream.match(/^\\s*:/, false)) return [\"def\", \"variable-definition\"];\n      return [\"variableName.special\", \"variable\"];\n    },\n    \"#\": function _(stream) {\n      if (!stream.eat(\"{\")) return false;\n      return [null, \"interpolation\"];\n    }\n  }\n});\nexport var less = mkCSS({\n  mediaTypes: mediaTypes,\n  mediaFeatures: mediaFeatures,\n  mediaValueKeywords: mediaValueKeywords,\n  propertyKeywords: propertyKeywords,\n  nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n  colorKeywords: colorKeywords,\n  valueKeywords: valueKeywords,\n  fontProperties: fontProperties,\n  allowNested: true,\n  lineComment: \"//\",\n  tokenHooks: {\n    \"/\": function _(stream, state) {\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return [\"comment\", \"comment\"];\n      } else if (stream.eat(\"*\")) {\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      } else {\n        return [\"operator\", \"operator\"];\n      }\n    },\n    \"@\": function _(stream) {\n      if (stream.eat(\"{\")) return [null, \"interpolation\"];\n      if (stream.match(/^(charset|document|font-face|import|(-(moz|ms|o|webkit)-)?keyframes|media|namespace|page|supports)\\b/i, false)) return false;\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      if (stream.match(/^\\s*:/, false)) return [\"def\", \"variable-definition\"];\n      return [\"variableName\", \"variable\"];\n    },\n    \"&\": function _() {\n      return [\"atom\", \"atom\"];\n    }\n  }\n});\nexport var gss = mkCSS({\n  documentTypes: documentTypes,\n  mediaTypes: mediaTypes,\n  mediaFeatures: mediaFeatures,\n  propertyKeywords: propertyKeywords,\n  nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n  fontProperties: fontProperties,\n  counterDescriptors: counterDescriptors,\n  colorKeywords: colorKeywords,\n  valueKeywords: valueKeywords,\n  supportsAtComponent: true,\n  tokenHooks: {\n    \"/\": function _(stream, state) {\n      if (!stream.eat(\"*\")) return false;\n      state.tokenize = tokenCComment;\n      return tokenCComment(stream, state);\n    }\n  }\n});"],"sourceRoot":""}