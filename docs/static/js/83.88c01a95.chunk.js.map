{"version":3,"sources":["../node_modules/@codemirror/legacy-modes/mode/smalltalk.js"],"names":["specialChars","keywords","Context","tokenizer","parent","this","next","Token","name","context","eos","State","expectVariable","indentation","userIndentationDelta","prototype","userIndent","indentUnit","stream","state","token","aChar","nextComment","nextString","peek","nextSymbol","eatWhile","nextTemporaries","test","Math","max","current","eat","smalltalk","startState","eatSpace","blankLine","indent","textAfter","cx","i","charAt","unit","languageData","indentOnInput"],"mappings":"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","file":"static/js/83.88c01a95.chunk.js","sourcesContent":["var specialChars = /[+\\-\\/\\\\*~<>=@%|&?!.,:;^]/;\nvar keywords = /true|false|nil|self|super|thisContext/;\n\nvar Context = function Context(tokenizer, parent) {\n  this.next = tokenizer;\n  this.parent = parent;\n};\n\nvar Token = function Token(name, context, eos) {\n  this.name = name;\n  this.context = context;\n  this.eos = eos;\n};\n\nvar State = function State() {\n  this.context = new Context(next, null);\n  this.expectVariable = true;\n  this.indentation = 0;\n  this.userIndentationDelta = 0;\n};\n\nState.prototype.userIndent = function (indentation, indentUnit) {\n  this.userIndentationDelta = indentation > 0 ? indentation / indentUnit - this.indentation : 0;\n};\n\nvar next = function next(stream, context, state) {\n  var token = new Token(null, context, false);\n  var aChar = stream.next();\n\n  if (aChar === '\"') {\n    token = nextComment(stream, new Context(nextComment, context));\n  } else if (aChar === '\\'') {\n    token = nextString(stream, new Context(nextString, context));\n  } else if (aChar === '#') {\n    if (stream.peek() === '\\'') {\n      stream.next();\n      token = nextSymbol(stream, new Context(nextSymbol, context));\n    } else {\n      if (stream.eatWhile(/[^\\s.{}\\[\\]()]/)) token.name = 'string.special';else token.name = 'meta';\n    }\n  } else if (aChar === '$') {\n    if (stream.next() === '<') {\n      stream.eatWhile(/[^\\s>]/);\n      stream.next();\n    }\n\n    token.name = 'string.special';\n  } else if (aChar === '|' && state.expectVariable) {\n    token.context = new Context(nextTemporaries, context);\n  } else if (/[\\[\\]{}()]/.test(aChar)) {\n    token.name = 'bracket';\n    token.eos = /[\\[{(]/.test(aChar);\n\n    if (aChar === '[') {\n      state.indentation++;\n    } else if (aChar === ']') {\n      state.indentation = Math.max(0, state.indentation - 1);\n    }\n  } else if (specialChars.test(aChar)) {\n    stream.eatWhile(specialChars);\n    token.name = 'operator';\n    token.eos = aChar !== ';'; // ; cascaded message expression\n  } else if (/\\d/.test(aChar)) {\n    stream.eatWhile(/[\\w\\d]/);\n    token.name = 'number';\n  } else if (/[\\w_]/.test(aChar)) {\n    stream.eatWhile(/[\\w\\d_]/);\n    token.name = state.expectVariable ? keywords.test(stream.current()) ? 'keyword' : 'variable' : null;\n  } else {\n    token.eos = state.expectVariable;\n  }\n\n  return token;\n};\n\nvar nextComment = function nextComment(stream, context) {\n  stream.eatWhile(/[^\"]/);\n  return new Token('comment', stream.eat('\"') ? context.parent : context, true);\n};\n\nvar nextString = function nextString(stream, context) {\n  stream.eatWhile(/[^']/);\n  return new Token('string', stream.eat('\\'') ? context.parent : context, false);\n};\n\nvar nextSymbol = function nextSymbol(stream, context) {\n  stream.eatWhile(/[^']/);\n  return new Token('string.special', stream.eat('\\'') ? context.parent : context, false);\n};\n\nvar nextTemporaries = function nextTemporaries(stream, context) {\n  var token = new Token(null, context, false);\n  var aChar = stream.next();\n\n  if (aChar === '|') {\n    token.context = context.parent;\n    token.eos = true;\n  } else {\n    stream.eatWhile(/[^|]/);\n    token.name = 'variable';\n  }\n\n  return token;\n};\n\nexport var smalltalk = {\n  startState: function startState() {\n    return new State();\n  },\n  token: function token(stream, state) {\n    state.userIndent(stream.indentation(), stream.indentUnit);\n\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var token = state.context.next(stream, state.context, state);\n    state.context = token.context;\n    state.expectVariable = token.eos;\n    return token.name;\n  },\n  blankLine: function blankLine(state, indentUnit) {\n    state.userIndent(0, indentUnit);\n  },\n  indent: function indent(state, textAfter, cx) {\n    var i = state.context.next === next && textAfter && textAfter.charAt(0) === ']' ? -1 : state.userIndentationDelta;\n    return (state.indentation + i) * cx.unit;\n  },\n  languageData: {\n    indentOnInput: /^\\s*\\]$/\n  }\n};"],"sourceRoot":""}