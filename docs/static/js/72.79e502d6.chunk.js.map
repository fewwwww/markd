{"version":3,"sources":["../node_modules/@codemirror/legacy-modes/mode/properties.js"],"names":["properties","token","stream","state","sol","afterSection","eol","nextMultiline","inMultiline","position","eatSpace","ch","next","skipTo","eat","skipToEnd","startState"],"mappings":"qGAAA,kDAAO,IAAIA,EAAa,CACtBC,MAAO,SAAeC,EAAQC,GAC5B,IAAIC,EAAMF,EAAOE,OAASD,EAAME,aAC5BC,EAAMJ,EAAOI,MAiBjB,GAhBAH,EAAME,cAAe,EAEjBD,IACED,EAAMI,eACRJ,EAAMK,aAAc,EACpBL,EAAMI,eAAgB,GAEtBJ,EAAMM,SAAW,OAIjBH,IAAQH,EAAMI,gBAChBJ,EAAMK,aAAc,EACpBL,EAAMM,SAAW,OAGfL,EACF,KAAOF,EAAOQ,aAGhB,IAAIC,EAAKT,EAAOU,OAEhB,OAAIR,GAAe,MAAPO,GAAqB,MAAPA,GAAqB,MAAPA,EAI7BP,GAAc,MAAPO,GAChBR,EAAME,cAAe,EACrBH,EAAOW,OAAO,KACdX,EAAOY,IAAI,KACJ,UACS,MAAPH,GAAqB,MAAPA,GACvBR,EAAMM,SAAW,QACV,OACS,OAAPE,GAAkC,UAAnBR,EAAMM,UAC1BP,EAAOI,QAGTH,EAAMI,eAAgB,GAInBJ,EAAMM,WAnBXN,EAAMM,SAAW,UACjBP,EAAOa,YACA,YAmBXC,WAAY,WACV,MAAO,CACLP,SAAU,MAEVF,eAAe,EAEfC,aAAa,EAEbH,cAAc","file":"static/js/72.79e502d6.chunk.js","sourcesContent":["export var properties = {\n  token: function token(stream, state) {\n    var sol = stream.sol() || state.afterSection;\n    var eol = stream.eol();\n    state.afterSection = false;\n\n    if (sol) {\n      if (state.nextMultiline) {\n        state.inMultiline = true;\n        state.nextMultiline = false;\n      } else {\n        state.position = \"def\";\n      }\n    }\n\n    if (eol && !state.nextMultiline) {\n      state.inMultiline = false;\n      state.position = \"def\";\n    }\n\n    if (sol) {\n      while (stream.eatSpace()) {}\n    }\n\n    var ch = stream.next();\n\n    if (sol && (ch === \"#\" || ch === \"!\" || ch === \";\")) {\n      state.position = \"comment\";\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (sol && ch === \"[\") {\n      state.afterSection = true;\n      stream.skipTo(\"]\");\n      stream.eat(\"]\");\n      return \"header\";\n    } else if (ch === \"=\" || ch === \":\") {\n      state.position = \"quote\";\n      return null;\n    } else if (ch === \"\\\\\" && state.position === \"quote\") {\n      if (stream.eol()) {\n        // end of line?\n        // Multiline value\n        state.nextMultiline = true;\n      }\n    }\n\n    return state.position;\n  },\n  startState: function startState() {\n    return {\n      position: \"def\",\n      // Current position, \"def\", \"quote\" or \"comment\"\n      nextMultiline: false,\n      // Is the next line multiline value\n      inMultiline: false,\n      // Is the current line a multiline value\n      afterSection: false // Did we just open a section\n\n    };\n  }\n};"],"sourceRoot":""}