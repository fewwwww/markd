{"version":3,"sources":["../node_modules/@codemirror/legacy-modes/mode/ruby.js"],"names":["wordObj","words","o","i","e","length","curPunc","keywordList","keywords","indentWords","dedentWords","opening","closing","chain","newtok","stream","state","tokenize","push","tokenBase","sol","match","eol","readBlockComment","eatSpace","m","phrase","mayIndent","ch","next","readQuoted","start","pos","depth","found","escaped","indexOf","backUp","regexpAhead","style","embed","eat","delim","propertyIsEnumerable","skipToEnd","pop","eatWhile","test","varList","lastTok","more","tokenBaseUntilBrace","peek","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","ruby","startState","indentUnit","indented","continuedLine","token","indentation","kwtype","thisTok","word","current","column","indent","textAfter","cx","firstChar","charAt","ct","closed","unit","languageData","indentOnInput","commentTokens","line","autocomplete"],"mappings":"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","file":"static/js/78.3f361820.chunk.js","sourcesContent":["function wordObj(words) {\n  var o = {};\n\n  for (var i = 0, e = words.length; i < e; ++i) {\n    o[words[i]] = true;\n  }\n\n  return o;\n}\n\nvar keywordList = [\"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\", \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\", \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\", \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\", \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\", \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"],\n    keywords = wordObj(keywordList);\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\", \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\n  \"[\": \"]\",\n  \"{\": \"}\",\n  \"(\": \")\"\n};\nvar closing = {\n  \"]\": \"[\",\n  \"}\": \"{\",\n  \")\": \"(\"\n};\nvar curPunc;\n\nfunction chain(newtok, stream, state) {\n  state.tokenize.push(newtok);\n  return newtok(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n    state.tokenize.push(readBlockComment);\n    return \"comment\";\n  }\n\n  if (stream.eatSpace()) return null;\n  var ch = stream.next(),\n      m;\n\n  if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n    return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n  } else if (ch == \"/\") {\n    if (regexpAhead(stream)) return chain(readQuoted(ch, \"string.special\", true), stream, state);else return \"operator\";\n  } else if (ch == \"%\") {\n    var style = \"string\",\n        embed = true;\n    if (stream.eat(\"s\")) style = \"atom\";else if (stream.eat(/[WQ]/)) style = \"string\";else if (stream.eat(/[r]/)) style = \"string.special\";else if (stream.eat(/[wxq]/)) {\n      style = \"string\";\n      embed = false;\n    }\n    var delim = stream.eat(/[^\\w\\s=]/);\n    if (!delim) return \"operator\";\n    if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n    return chain(readQuoted(delim, style, embed, true), stream, state);\n  } else if (ch == \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n    return chain(readHereDoc(m[2], m[1]), stream, state);\n  } else if (ch == \"0\") {\n    if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);else stream.eatWhile(/[0-7]/);\n    return \"number\";\n  } else if (/\\d/.test(ch)) {\n    stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n    return \"number\";\n  } else if (ch == \"?\") {\n    while (stream.match(/^\\\\[CM]-/)) {}\n\n    if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);else stream.next();\n    return \"string\";\n  } else if (ch == \":\") {\n    if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n    if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state); // :> :>> :< :<< are valid symbols\n\n    if (stream.eat(/[\\<\\>]/)) {\n      stream.eat(/[\\<\\>]/);\n      return \"atom\";\n    } // :+ :- :/ :* :| :& :! are valid symbols\n\n\n    if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n      return \"atom\";\n    } // Symbols can't start by a digit\n\n\n    if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n      stream.eatWhile(/[\\w$\\xa1-\\uffff]/); // Only one ? ! = is allowed and only as the last character\n\n      stream.eat(/[\\?\\!\\=]/);\n      return \"atom\";\n    }\n\n    return \"operator\";\n  } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n    stream.eat(\"@\");\n    stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n    return \"propertyName\";\n  } else if (ch == \"$\") {\n    if (stream.eat(/[a-zA-Z_]/)) {\n      stream.eatWhile(/[\\w]/);\n    } else if (stream.eat(/\\d/)) {\n      stream.eat(/\\d/);\n    } else {\n      stream.next(); // Must be a special global like $: or $!\n    }\n\n    return \"variableName.special\";\n  } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n    stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n    stream.eat(/[\\?\\!]/);\n    if (stream.eat(\":\")) return \"atom\";\n    return \"variable\";\n  } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n    curPunc = \"|\";\n    return null;\n  } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  } else if (ch == \"-\" && stream.eat(\">\")) {\n    return \"operator\";\n  } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n    var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n    if (ch == \".\" && !more) curPunc = \".\";\n    return \"operator\";\n  } else {\n    return null;\n  }\n}\n\nfunction regexpAhead(stream) {\n  var start = stream.pos,\n      depth = 0,\n      next,\n      found = false,\n      escaped = false;\n\n  while ((next = stream.next()) != null) {\n    if (!escaped) {\n      if (\"[{(\".indexOf(next) > -1) {\n        depth++;\n      } else if (\"]})\".indexOf(next) > -1) {\n        depth--;\n        if (depth < 0) break;\n      } else if (next == \"/\" && depth == 0) {\n        found = true;\n        break;\n      }\n\n      escaped = next == \"\\\\\";\n    } else {\n      escaped = false;\n    }\n  }\n\n  stream.backUp(stream.pos - start);\n  return found;\n}\n\nfunction tokenBaseUntilBrace(depth) {\n  if (!depth) depth = 1;\n  return function (stream, state) {\n    if (stream.peek() == \"}\") {\n      if (depth == 1) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length - 1](stream, state);\n      } else {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n      }\n    } else if (stream.peek() == \"{\") {\n      state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n    }\n\n    return tokenBase(stream, state);\n  };\n}\n\nfunction tokenBaseOnce() {\n  var alreadyCalled = false;\n  return function (stream, state) {\n    if (alreadyCalled) {\n      state.tokenize.pop();\n      return state.tokenize[state.tokenize.length - 1](stream, state);\n    }\n\n    alreadyCalled = true;\n    return tokenBase(stream, state);\n  };\n}\n\nfunction readQuoted(quote, style, embed, unescaped) {\n  return function (stream, state) {\n    var escaped = false,\n        ch;\n\n    if (state.context.type === 'read-quoted-paused') {\n      state.context = state.context.prev;\n      stream.eat(\"}\");\n    }\n\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && (unescaped || !escaped)) {\n        state.tokenize.pop();\n        break;\n      }\n\n      if (embed && ch == \"#\" && !escaped) {\n        if (stream.eat(\"{\")) {\n          if (quote == \"}\") {\n            state.context = {\n              prev: state.context,\n              type: 'read-quoted-paused'\n            };\n          }\n\n          state.tokenize.push(tokenBaseUntilBrace());\n          break;\n        } else if (/[@\\$]/.test(stream.peek())) {\n          state.tokenize.push(tokenBaseOnce());\n          break;\n        }\n      }\n\n      escaped = !escaped && ch == \"\\\\\";\n    }\n\n    return style;\n  };\n}\n\nfunction readHereDoc(phrase, mayIndent) {\n  return function (stream, state) {\n    if (mayIndent) stream.eatSpace();\n    if (stream.match(phrase)) state.tokenize.pop();else stream.skipToEnd();\n    return \"string\";\n  };\n}\n\nfunction readBlockComment(stream, state) {\n  if (stream.sol() && stream.match(\"=end\") && stream.eol()) state.tokenize.pop();\n  stream.skipToEnd();\n  return \"comment\";\n}\n\nexport var ruby = {\n  startState: function startState(indentUnit) {\n    return {\n      tokenize: [tokenBase],\n      indented: 0,\n      context: {\n        type: \"top\",\n        indented: -indentUnit\n      },\n      continuedLine: false,\n      lastTok: null,\n      varList: false\n    };\n  },\n  token: function token(stream, state) {\n    curPunc = null;\n    if (stream.sol()) state.indented = stream.indentation();\n    var style = state.tokenize[state.tokenize.length - 1](stream, state),\n        kwtype;\n    var thisTok = curPunc;\n\n    if (style == \"variable\") {\n      var word = stream.current();\n      style = state.lastTok == \".\" ? \"property\" : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : /^[A-Z]/.test(word) ? \"tag\" : state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList ? \"def\" : \"variable\";\n\n      if (style == \"keyword\") {\n        thisTok = word;\n        if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation()) kwtype = \"indent\";else if (word == \"do\" && state.context.indented < state.indented) kwtype = \"indent\";\n      }\n    }\n\n    if (curPunc || style && style != \"comment\") state.lastTok = thisTok;\n    if (curPunc == \"|\") state.varList = !state.varList;\n    if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc)) state.context = {\n      prev: state.context,\n      type: curPunc || style,\n      indented: state.indented\n    };else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev) state.context = state.context.prev;\n    if (stream.eol()) state.continuedLine = curPunc == \"\\\\\" || style == \"operator\";\n    return style;\n  },\n  indent: function indent(state, textAfter, cx) {\n    if (state.tokenize[state.tokenize.length - 1] != tokenBase) return null;\n    var firstChar = textAfter && textAfter.charAt(0);\n    var ct = state.context;\n    var closed = ct.type == closing[firstChar] || ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n    return ct.indented + (closed ? 0 : cx.unit) + (state.continuedLine ? cx.unit : 0);\n  },\n  languageData: {\n    indentOnInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    commentTokens: {\n      line: \"#\"\n    },\n    autocomplete: keywordList\n  }\n};"],"sourceRoot":""}