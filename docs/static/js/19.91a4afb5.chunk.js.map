{"version":3,"sources":["../node_modules/@lezer/json/dist/index.es.js","../node_modules/@codemirror/lang-json/dist/index.js"],"names":["parser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","openedBy","closedBy","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","jsonParseLinter","view","JSON","parse","state","doc","toString","e","SyntaxError","pos","error","m","message","match","Math","min","length","line","from","getErrorPosition","severity","to","jsonLanguage","define","configure","props","add","Object","except","Array","String","string","Number","number","bool","PropertyName","propertyName","null","separator","squareBracket","brace","languageData","closeBrackets","brackets","indentOnInput","json"],"mappings":"+HAGIA,EAAS,IAASC,YAAY,CAChCC,QAAS,GACTC,OAAQ,mRACRC,UAAW,iGACXC,KAAM,kFACNC,UAAW,2FACXC,QAAS,GACTC,UAAW,CAAC,CAAC,IAASC,SAAU,EAAG,IAAK,GAAI,KAAM,CAAC,IAASC,SAAU,EAAG,IAAK,GAAI,MAClFC,aAAc,CAAC,GACfC,gBAAiB,EACjBC,UAAW,wkBACXC,WAAY,CAAC,GACbC,SAAU,CACR,SAAY,CAAC,EAAG,IAElBC,UAAW,I,cClBb,kIAUA,IAAIC,EAAkB,WACpB,OAAO,SAAUC,GACf,IACEC,KAAKC,MAAMF,EAAKG,MAAMC,IAAIC,YAC1B,MAAOC,GACP,KAAMA,aAAaC,aAAc,MAAMD,EACvC,IAAIE,EAaV,SAA0BC,EAAOL,GAC/B,IAAIM,EACJ,OAAIA,EAAID,EAAME,QAAQC,MAAM,sBAA6BC,KAAKC,KAAKJ,EAAE,GAAIN,EAAIW,SACzEL,EAAID,EAAME,QAAQC,MAAM,+BAAsCC,KAAKC,IAAIV,EAAIY,MAAMN,EAAE,IAAIO,OAAQP,EAAE,GAAK,EAAGN,EAAIW,QAC1G,EAjBOG,CAAiBZ,EAAGN,EAAKG,MAAMC,KACzC,MAAO,CAAC,CACNa,KAAMT,EACNG,QAASL,EAAEK,QACXQ,SAAU,QACVC,GAAIZ,IAIR,MAAO,KAeX,IAAIa,EAEJ,IAAWC,OAAO,CAChBxC,OAEAA,EAAOyC,UAAU,CACfC,MAAO,CAEP,IAAeC,IAAI,CACjBC,OAEA,YAAgB,CACdC,OAAQ,WAEVC,MAEA,YAAgB,CACdD,OAAQ,aAIZ,IAAaF,IAAI,CACf,eAAgB,MAGlB,YAAU,CACRI,OAAQ,IAAKC,OACbC,OAAQ,IAAKC,OACb,aAAc,IAAKC,KACnBC,aAAc,IAAKC,aACnBC,KAAM,IAAKA,KACX,IAAK,IAAKC,UACV,MAAO,IAAKC,cACZ,MAAO,IAAKC,WAGhBC,aAAc,CACZC,cAAe,CACbC,SAAU,CAAC,IAAK,IAAK,MAEvBC,cAAe,iBAOnB,SAASC,IACP,OAAO,IAAI,IAAgBvB","file":"static/js/19.91a4afb5.chunk.js","sourcesContent":["import { LRParser } from '@lezer/lr';\nimport { NodeProp } from '@lezer/common'; // This file was generated by lezer-generator. You probably shouldn't edit it.\n\nvar parser = LRParser.deserialize({\n  version: 13,\n  states: \"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j\",\n  stateData: \"#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O\",\n  goto: \"!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R\",\n  nodeNames: \"âš  JsonText True False Null Number String } { Object Property PropertyName ] [ Array\",\n  maxTerm: 25,\n  nodeProps: [[NodeProp.openedBy, 7, \"{\", 12, \"[\"], [NodeProp.closedBy, 8, \"}\", 13, \"]\"]],\n  skippedNodes: [0],\n  repeatNodeCount: 2,\n  tokenData: \"(p~RaXY!WYZ!W]^!Wpq!Wrs!]|}$i}!O$n!Q!R$w!R![&V![!]&h!}#O&m#P#Q&r#Y#Z&w#b#c'f#h#i'}#o#p(f#q#r(k~!]Oc~~!`Upq!]qr!]rs!rs#O!]#O#P!w#P~!]~!wOe~~!zXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#g~#jR!Q![#s!c!i#s#T#Z#s~#vR!Q![$P!c!i$P#T#Z$P~$SR!Q![$]!c!i$]#T#Z$]~$`R!Q![!]!c!i!]#T#Z!]~$nOh~~$qQ!Q!R$w!R![&V~$|RT~!O!P%V!g!h%k#X#Y%k~%YP!Q![%]~%bRT~!Q![%]!g!h%k#X#Y%k~%nR{|%w}!O%w!Q![%}~%zP!Q![%}~&SPT~!Q![%}~&[ST~!O!P%V!Q![&V!g!h%k#X#Y%k~&mOg~~&rO]~~&wO[~~&zP#T#U&}~'QP#`#a'T~'WP#g#h'Z~'^P#X#Y'a~'fOR~~'iP#i#j'l~'oP#`#a'r~'uP#`#a'x~'}OS~~(QP#f#g(T~(WP#i#j(Z~(^P#X#Y(a~(fOQ~~(kOW~~(pOV~\",\n  tokenizers: [0],\n  topRules: {\n    \"JsonText\": [0, 1]\n  },\n  tokenPrec: 0\n});\nexport { parser };","import { parser } from '@lezer/json';\nimport { LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\nimport { styleTags, tags } from '@codemirror/highlight';\n/**\nCalls\n[`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)\non the document and, if that throws an error, reports it as a\nsingle diagnostic.\n*/\n\nvar jsonParseLinter = function jsonParseLinter() {\n  return function (view) {\n    try {\n      JSON.parse(view.state.doc.toString());\n    } catch (e) {\n      if (!(e instanceof SyntaxError)) throw e;\n      var pos = getErrorPosition(e, view.state.doc);\n      return [{\n        from: pos,\n        message: e.message,\n        severity: 'error',\n        to: pos\n      }];\n    }\n\n    return [];\n  };\n};\n\nfunction getErrorPosition(error, doc) {\n  var m;\n  if (m = error.message.match(/at position (\\d+)/)) return Math.min(+m[1], doc.length);\n  if (m = error.message.match(/at line (\\d+) column (\\d+)/)) return Math.min(doc.line(+m[1]).from + +m[2] - 1, doc.length);\n  return 0;\n}\n/**\nA language provider that provides JSON parsing.\n*/\n\n\nvar jsonLanguage =\n/*@__PURE__*/\nLRLanguage.define({\n  parser:\n  /*@__PURE__*/\n  parser.configure({\n    props: [\n    /*@__PURE__*/\n    indentNodeProp.add({\n      Object:\n      /*@__PURE__*/\n      continuedIndent({\n        except: /^\\s*\\}/\n      }),\n      Array:\n      /*@__PURE__*/\n      continuedIndent({\n        except: /^\\s*\\]/\n      })\n    }),\n    /*@__PURE__*/\n    foldNodeProp.add({\n      \"Object Array\": foldInside\n    }),\n    /*@__PURE__*/\n    styleTags({\n      String: tags.string,\n      Number: tags.number,\n      \"True False\": tags.bool,\n      PropertyName: tags.propertyName,\n      null: tags.null,\n      \",\": tags.separator,\n      \"[ ]\": tags.squareBracket,\n      \"{ }\": tags.brace\n    })]\n  }),\n  languageData: {\n    closeBrackets: {\n      brackets: [\"[\", \"{\", '\"']\n    },\n    indentOnInput: /^\\s*[\\}\\]]$/\n  }\n});\n/**\nJSON language support.\n*/\n\nfunction json() {\n  return new LanguageSupport(jsonLanguage);\n}\n\nexport { json, jsonLanguage, jsonParseLinter };"],"sourceRoot":""}