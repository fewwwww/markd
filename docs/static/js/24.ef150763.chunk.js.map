{"version":3,"sources":["../node_modules/@codemirror/legacy-modes/mode/apl.js"],"names":["builtInFuncs","isOperator","isNiladic","isFunction","isArrow","isComment","apl","startState","prev","func","op","string","escape","token","stream","state","ch","eatSpace","next","eatWhile","type","c","stringEater","test","skipToEnd","peek"],"mappings":"oGAAA,+CAAIA,EAAe,CACjB,IAAK,CAAC,YAAa,OACnB,SAAK,CAAC,SAAU,YAChB,OAAK,CAAC,SAAU,YAChB,OAAK,CAAC,aAAc,UACpB,SAAK,CAAC,UAAW,aACjB,SAAK,CAAC,QAAS,YACf,SAAK,CAAC,WAAY,WAClB,SAAK,CAAC,gBAAiB,WACvB,IAAK,CAAC,OAAQ,QACd,SAAK,CAAC,eAAgB,gBACtB,SAAK,CAAC,aAAc,gBACpB,SAAK,CAAC,UAAW,iBACjB,IAAK,CAAC,YAAa,YACnB,SAAK,CAAC,gBAAiB,gBACvB,IAAK,CAAC,KAAM,YACZ,SAAK,CAAC,KAAM,mBACZ,IAAK,CAAC,KAAM,UACZ,IAAK,CAAC,KAAM,eACZ,SAAK,CAAC,KAAM,sBACZ,SAAK,CAAC,KAAM,YACZ,SAAK,CAAC,QAAS,SACf,SAAK,CAAC,KAAM,YACZ,SAAK,CAAC,SAAU,cAChB,SAAK,CAAC,KAAM,QACZ,SAAK,CAAC,SAAU,SAChB,SAAK,CAAC,KAAM,gBACZ,SAAK,CAAC,MAAO,WACb,SAAK,CAAC,KAAM,MACZ,SAAK,CAAC,KAAM,OACZ,SAAK,CAAC,KAAM,OACZ,SAAK,CAAC,KAAM,QACZ,SAAK,CAAC,UAAW,WACjB,IAAK,CAAC,QAAS,YACf,SAAK,CAAC,KAAM,qBACZ,SAAK,CAAC,UAAW,UACjB,SAAK,CAAC,eAAgB,eACtB,SAAK,CAAC,YAAa,MACnB,SAAK,CAAC,QAAS,QACf,SAAK,CAAC,KAAM,QACZ,SAAK,CAAC,UAAW,qBACjB,SAAK,CAAC,UAAW,QACjB,SAAK,CAAC,KAAM,SACZ,SAAK,CAAC,UAAW,MACjB,SAAK,CAAC,YAAa,MACnB,SAAK,CAAC,SAAU,MAChB,SAAK,CAAC,SAAU,MAChB,SAAK,CAAC,SAAU,mBAChB,SAAK,CAAC,UAAW,MACjB,SAAK,CAAC,OAAQ,QACd,SAAK,CAAC,OAAQ,UAEZC,EAAa,+BACbC,EAAY,SACZC,EAAa,4QACbC,EAAU,SACVC,EAAY,eAgBLC,EAAM,CACfC,WAAY,WACV,MAAO,CACLC,MAAM,EACNC,MAAM,EACNC,IAAI,EACJC,QAAQ,EACRC,QAAQ,IAGZC,MAAO,SAAeC,EAAQC,GAC5B,IAAIC,EAEJ,OAAIF,EAAOG,WACF,KAKE,OAFXD,EAAKF,EAAOI,SAEa,MAAPF,GAChBF,EAAOK,SAlCK,SAAqBC,GACrC,IAAIZ,EAEJ,OADAA,GAAO,EACA,SAAUa,GAGf,OAFAb,EAAOa,EAEHA,IAAMD,GACQ,OAATZ,GA2BSc,CAAYN,IAC5BF,EAAOI,OACPH,EAAMP,MAAO,EACN,UAGL,UAAUe,KAAKP,IACjBD,EAAMP,MAAO,EACN,MAGL,UAAUe,KAAKP,IACjBD,EAAMP,MAAO,EACN,MAGLN,EAAUqB,KAAKP,IACjBD,EAAMP,MAAO,EACN,QAGL,WAAQe,KAAKP,IACXD,EAAMN,MACRM,EAAMN,MAAO,EACbM,EAAMP,MAAO,GAEbO,EAAMP,MAAO,EAGfM,EAAOK,SAAS,UACT,UAGLlB,EAAWsB,KAAKP,GACX,WAGLZ,EAAQmB,KAAKP,GACR,WAGLb,EAAWoB,KAAKP,IAClBD,EAAMN,MAAO,EACbM,EAAMP,MAAO,EACNR,EAAagB,GAAM,iCAAmC,yBAG3DX,EAAUkB,KAAKP,IACjBF,EAAOU,YACA,WAGE,WAAPR,GAAgC,MAAlBF,EAAOW,QACvBX,EAAOI,OACA,0BAGTJ,EAAOK,SAAS,WAChBJ,EAAMP,MAAO,EACN","file":"static/js/24.ef150763.chunk.js","sourcesContent":["var builtInFuncs = {\n  \"+\": [\"conjugate\", \"add\"],\n  \"−\": [\"negate\", \"subtract\"],\n  \"×\": [\"signOf\", \"multiply\"],\n  \"÷\": [\"reciprocal\", \"divide\"],\n  \"⌈\": [\"ceiling\", \"greaterOf\"],\n  \"⌊\": [\"floor\", \"lesserOf\"],\n  \"∣\": [\"absolute\", \"residue\"],\n  \"⍳\": [\"indexGenerate\", \"indexOf\"],\n  \"?\": [\"roll\", \"deal\"],\n  \"⋆\": [\"exponentiate\", \"toThePowerOf\"],\n  \"⍟\": [\"naturalLog\", \"logToTheBase\"],\n  \"○\": [\"piTimes\", \"circularFuncs\"],\n  \"!\": [\"factorial\", \"binomial\"],\n  \"⌹\": [\"matrixInverse\", \"matrixDivide\"],\n  \"<\": [null, \"lessThan\"],\n  \"≤\": [null, \"lessThanOrEqual\"],\n  \"=\": [null, \"equals\"],\n  \">\": [null, \"greaterThan\"],\n  \"≥\": [null, \"greaterThanOrEqual\"],\n  \"≠\": [null, \"notEqual\"],\n  \"≡\": [\"depth\", \"match\"],\n  \"≢\": [null, \"notMatch\"],\n  \"∈\": [\"enlist\", \"membership\"],\n  \"⍷\": [null, \"find\"],\n  \"∪\": [\"unique\", \"union\"],\n  \"∩\": [null, \"intersection\"],\n  \"∼\": [\"not\", \"without\"],\n  \"∨\": [null, \"or\"],\n  \"∧\": [null, \"and\"],\n  \"⍱\": [null, \"nor\"],\n  \"⍲\": [null, \"nand\"],\n  \"⍴\": [\"shapeOf\", \"reshape\"],\n  \",\": [\"ravel\", \"catenate\"],\n  \"⍪\": [null, \"firstAxisCatenate\"],\n  \"⌽\": [\"reverse\", \"rotate\"],\n  \"⊖\": [\"axis1Reverse\", \"axis1Rotate\"],\n  \"⍉\": [\"transpose\", null],\n  \"↑\": [\"first\", \"take\"],\n  \"↓\": [null, \"drop\"],\n  \"⊂\": [\"enclose\", \"partitionWithAxis\"],\n  \"⊃\": [\"diclose\", \"pick\"],\n  \"⌷\": [null, \"index\"],\n  \"⍋\": [\"gradeUp\", null],\n  \"⍒\": [\"gradeDown\", null],\n  \"⊤\": [\"encode\", null],\n  \"⊥\": [\"decode\", null],\n  \"⍕\": [\"format\", \"formatByExample\"],\n  \"⍎\": [\"execute\", null],\n  \"⊣\": [\"stop\", \"left\"],\n  \"⊢\": [\"pass\", \"right\"]\n};\nvar isOperator = /[\\.\\/⌿⍀¨⍣]/;\nvar isNiladic = /⍬/;\nvar isFunction = /[\\+−×÷⌈⌊∣⍳\\?⋆⍟○!⌹<≤=>≥≠≡≢∈⍷∪∩∼∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⌷⍋⍒⊤⊥⍕⍎⊣⊢]/;\nvar isArrow = /←/;\nvar isComment = /[⍝#].*$/;\n\nvar stringEater = function stringEater(type) {\n  var prev;\n  prev = false;\n  return function (c) {\n    prev = c;\n\n    if (c === type) {\n      return prev === \"\\\\\";\n    }\n\n    return true;\n  };\n};\n\nexport var apl = {\n  startState: function startState() {\n    return {\n      prev: false,\n      func: false,\n      op: false,\n      string: false,\n      escape: false\n    };\n  },\n  token: function token(stream, state) {\n    var ch;\n\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    ch = stream.next();\n\n    if (ch === '\"' || ch === \"'\") {\n      stream.eatWhile(stringEater(ch));\n      stream.next();\n      state.prev = true;\n      return \"string\";\n    }\n\n    if (/[\\[{\\(]/.test(ch)) {\n      state.prev = false;\n      return null;\n    }\n\n    if (/[\\]}\\)]/.test(ch)) {\n      state.prev = true;\n      return null;\n    }\n\n    if (isNiladic.test(ch)) {\n      state.prev = false;\n      return \"atom\";\n    }\n\n    if (/[¯\\d]/.test(ch)) {\n      if (state.func) {\n        state.func = false;\n        state.prev = false;\n      } else {\n        state.prev = true;\n      }\n\n      stream.eatWhile(/[\\w\\.]/);\n      return \"number\";\n    }\n\n    if (isOperator.test(ch)) {\n      return \"operator\";\n    }\n\n    if (isArrow.test(ch)) {\n      return \"operator\";\n    }\n\n    if (isFunction.test(ch)) {\n      state.func = true;\n      state.prev = false;\n      return builtInFuncs[ch] ? \"variableName.function.standard\" : \"variableName.function\";\n    }\n\n    if (isComment.test(ch)) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    if (ch === \"∘\" && stream.peek() === \".\") {\n      stream.next();\n      return \"variableName.function\";\n    }\n\n    stream.eatWhile(/[\\w\\$_]/);\n    state.prev = true;\n    return \"keyword\";\n  }\n};"],"sourceRoot":""}