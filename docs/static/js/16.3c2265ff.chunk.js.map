{"version":3,"sources":["../node_modules/@codemirror/legacy-modes/mode/nsis.js","../node_modules/@codemirror/legacy-modes/mode/simple-mode.js"],"names":["nsis","start","regex","token","indent","dedent","next","comment","languageData","indentOnInput","commentTokens","line","block","open","close","simpleMode","states","ensureState","states_","meta","hasIndentation","state","hasOwnProperty","list","orig","i","length","data","push","Rule","startState","pending","copyState","s","slice","stack","tokenFunction","indentFunction","name","Error","this","val","caret","flags","RegExp","ignoreCase","source","String","toRegex","apply","replace","result","asToken","stream","pend","shift","pos","text","curState","rule","matches","sol","match","pop","indentation","indentUnit","j","backUp","join","textAfter","dontIndentStates","doneIndentState","indexOf","rules","scan","dedentIfLineStart","m","exec"],"mappings":"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","file":"static/js/16.3c2265ff.chunk.js","sourcesContent":["import { simpleMode } from \"./simple-mode.js\";\nexport var nsis = simpleMode({\n  start: [// Numbers\n  {\n    regex: /(?:[+-]?)(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\d+.?\\d*)/,\n    token: \"number\"\n  }, // Strings\n  {\n    regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/,\n    token: \"string\"\n  }, {\n    regex: /'(?:[^\\\\']|\\\\.)*'?/,\n    token: \"string\"\n  }, {\n    regex: /`(?:[^\\\\`]|\\\\.)*`?/,\n    token: \"string\"\n  }, // Compile Time Commands\n  {\n    regex: /^\\s*(?:\\!(include|addincludedir|addplugindir|appendfile|cd|delfile|echo|error|execute|packhdr|pragma|finalize|getdllversion|gettlbversion|system|tempfile|warning|verbose|define|undef|insertmacro|macro|macroend|makensis|searchparse|searchreplace))\\b/,\n    token: \"keyword\"\n  }, // Conditional Compilation\n  {\n    regex: /^\\s*(?:\\!(if(?:n?def)?|ifmacron?def|macro))\\b/,\n    token: \"keyword\",\n    indent: true\n  }, {\n    regex: /^\\s*(?:\\!(else|endif|macroend))\\b/,\n    token: \"keyword\",\n    dedent: true\n  }, // Runtime Commands\n  {\n    regex: /^\\s*(?:Abort|AddBrandingImage|AddSize|AllowRootDirInstall|AllowSkipFiles|AutoCloseWindow|BGFont|BGGradient|BrandingText|BringToFront|Call|CallInstDLL|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|CreateDirectory|CreateFont|CreateShortCut|Delete|DeleteINISec|DeleteINIStr|DeleteRegKey|DeleteRegValue|DetailPrint|DetailsButtonText|DirText|DirVar|DirVerify|EnableWindow|EnumRegKey|EnumRegValue|Exch|Exec|ExecShell|ExecShellWait|ExecWait|ExpandEnvStrings|File|FileBufSize|FileClose|FileErrorText|FileOpen|FileRead|FileReadByte|FileReadUTF16LE|FileReadWord|FileWriteUTF16LE|FileSeek|FileWrite|FileWriteByte|FileWriteWord|FindClose|FindFirst|FindNext|FindWindow|FlushINI|GetCurInstType|GetCurrentAddress|GetDlgItem|GetDLLVersion|GetDLLVersionLocal|GetErrorLevel|GetFileTime|GetFileTimeLocal|GetFullPathName|GetFunctionAddress|GetInstDirError|GetKnownFolderPath|GetLabelAddress|GetTempFileName|Goto|HideWindow|Icon|IfAbort|IfErrors|IfFileExists|IfRebootFlag|IfRtlLanguage|IfShellVarContextAll|IfSilent|InitPluginsDir|InstallButtonText|InstallColors|InstallDir|InstallDirRegKey|InstProgressFlags|InstType|InstTypeGetText|InstTypeSetText|Int64Cmp|Int64CmpU|Int64Fmt|IntCmp|IntCmpU|IntFmt|IntOp|IntPtrCmp|IntPtrCmpU|IntPtrOp|IsWindow|LangString|LicenseBkColor|LicenseData|LicenseForceSelection|LicenseLangString|LicenseText|LoadAndSetImage|LoadLanguageFile|LockWindow|LogSet|LogText|ManifestDPIAware|ManifestLongPathAware|ManifestMaxVersionTested|ManifestSupportedOS|MessageBox|MiscButtonText|Name|Nop|OutFile|Page|PageCallbacks|PEAddResource|PEDllCharacteristics|PERemoveResource|PESubsysVer|Pop|Push|Quit|ReadEnvStr|ReadINIStr|ReadRegDWORD|ReadRegStr|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|SectionGetFlags|SectionGetInstTypes|SectionGetSize|SectionGetText|SectionIn|SectionSetFlags|SectionSetInstTypes|SectionSetSize|SectionSetText|SendMessage|SetAutoClose|SetBrandingImage|SetCompress|SetCompressor|SetCompressorDictSize|SetCtlColors|SetCurInstType|SetDatablockOptimize|SetDateSave|SetDetailsPrint|SetDetailsView|SetErrorLevel|SetErrors|SetFileAttributes|SetFont|SetOutPath|SetOverwrite|SetRebootFlag|SetRegView|SetShellVarContext|SetSilent|ShowInstDetails|ShowUninstDetails|ShowWindow|SilentInstall|SilentUnInstall|Sleep|SpaceTexts|StrCmp|StrCmpS|StrCpy|StrLen|SubCaption|Unicode|UninstallButtonText|UninstallCaption|UninstallIcon|UninstallSubCaption|UninstallText|UninstPage|UnRegDLL|Var|VIAddVersionKey|VIFileVersion|VIProductVersion|WindowIcon|WriteINIStr|WriteRegBin|WriteRegDWORD|WriteRegExpandStr|WriteRegMultiStr|WriteRegNone|WriteRegStr|WriteUninstaller|XPStyle)\\b/,\n    token: \"keyword\"\n  }, {\n    regex: /^\\s*(?:Function|PageEx|Section(?:Group)?)\\b/,\n    token: \"keyword\",\n    indent: true\n  }, {\n    regex: /^\\s*(?:(Function|PageEx|Section(?:Group)?)End)\\b/,\n    token: \"keyword\",\n    dedent: true\n  }, // Command Options\n  {\n    regex: /\\b(?:ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_HIDDEN|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HIDDEN|HKCC|HKCR(32|64)?|HKCU(32|64)?|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM(32|64)?|HKPD|HKU|IDABORT|IDCANCEL|IDD_DIR|IDD_INST|IDD_INSTFILES|IDD_LICENSE|IDD_SELCOM|IDD_UNINST|IDD_VERIFY|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|MB_YESNOCANCEL|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SW_HIDE|SW_SHOWDEFAULT|SW_SHOWMAXIMIZED|SW_SHOWMINIMIZED|SW_SHOWNORMAL|SYSTEM|TEMPORARY)\\b/,\n    token: \"atom\"\n  }, {\n    regex: /\\b(?:admin|all|auto|both|bottom|bzip2|components|current|custom|directory|false|force|hide|highest|ifdiff|ifnewer|instfiles|lastused|leave|left|license|listonly|lzma|nevershow|none|normal|notset|off|on|right|show|silent|silentlog|textonly|top|true|try|un\\.components|un\\.custom|un\\.directory|un\\.instfiles|un\\.license|uninstConfirm|user|Win10|Win7|Win8|WinVista|zlib)\\b/,\n    token: \"builtin\"\n  }, // LogicLib.nsh\n  {\n    regex: /\\$\\{(?:And(?:If(?:Not)?|Unless)|Break|Case(?:Else)?|Continue|Default|Do(?:Until|While)?|Else(?:If(?:Not)?|Unless)?|End(?:If|Select|Switch)|Exit(?:Do|For|While)|For(?:Each)?|If(?:Cmd|Not(?:Then)?|Then)?|Loop(?:Until|While)?|Or(?:If(?:Not)?|Unless)|Select|Switch|Unless|While)\\}/,\n    token: \"controlKeyword\",\n    indent: true\n  }, // FileFunc.nsh\n  {\n    regex: /\\$\\{(?:BannerTrimPath|DirState|DriveSpace|Get(BaseName|Drives|ExeName|ExePath|FileAttributes|FileExt|FileName|FileVersion|Options|OptionsS|Parameters|Parent|Root|Size|Time)|Locate|RefreshShellIcons)\\}/,\n    token: \"modifier\",\n    dedent: true\n  }, // Memento.nsh\n  {\n    regex: /\\$\\{(?:Memento(?:Section(?:Done|End|Restore|Save)?|UnselectedSection))\\}/,\n    token: \"controlKeyword\",\n    dedent: true\n  }, // TextFunc.nsh\n  {\n    regex: /\\$\\{(?:Config(?:Read|ReadS|Write|WriteS)|File(?:Join|ReadFromEnd|Recode)|Line(?:Find|Read|Sum)|Text(?:Compare|CompareS)|TrimNewLines)\\}/,\n    token: \"keyword\",\n    dedent: true\n  }, // WinVer.nsh\n  {\n    regex: /\\$\\{(?:(?:At(?:Least|Most)|Is)(?:ServicePack|Win(?:7|8|10|95|98|200(?:0|3|8(?:R2)?)|ME|NT4|Vista|XP))|Is(?:NT|Server))\\}/,\n    token: \"variable\",\n    dedent: true\n  }, // WordFunc.nsh\n  {\n    regex: /\\$\\{(?:StrFilterS?|Version(?:Compare|Convert)|Word(?:AddS?|Find(?:(?:2|3)X)?S?|InsertS?|ReplaceS?))\\}/,\n    token: \"keyword\",\n    dedent: true\n  }, // x64.nsh\n  {\n    regex: /\\$\\{(?:RunningX64)\\}/,\n    token: \"variable\",\n    dedent: true\n  }, {\n    regex: /\\$\\{(?:Disable|Enable)X64FSRedirection\\}/,\n    token: \"keyword\",\n    dedent: true\n  }, // Line Comment\n  {\n    regex: /(#|;).*/,\n    token: \"comment\"\n  }, // Block Comment\n  {\n    regex: /\\/\\*/,\n    token: \"comment\",\n    next: \"comment\"\n  }, // Operator\n  {\n    regex: /[-+\\/*=<>!]+/,\n    token: \"operator\"\n  }, // Variable\n  {\n    regex: /\\$\\w+/,\n    token: \"variable\"\n  }, // Constant\n  {\n    regex: /\\${[\\w\\.:-]+}/,\n    token: \"variableName.constant\"\n  }, // Language String\n  {\n    regex: /\\$\\([\\w\\.:-]+\\)/,\n    token: \"atom\"\n  }],\n  comment: [{\n    regex: /.*?\\*\\//,\n    token: \"comment\",\n    next: \"start\"\n  }, {\n    regex: /.*/,\n    token: \"comment\"\n  }],\n  languageData: {\n    indentOnInput: /^\\s*((Function|PageEx|Section|Section(Group)?)End|(\\!(endif|macroend))|\\$\\{(End(If|Unless|While)|Loop(Until)|Next)\\})$/,\n    commentTokens: {\n      line: \"#\",\n      block: {\n        open: \"/*\",\n        close: \"*/\"\n      }\n    }\n  }\n});","export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {},\n      meta = states.languageData || {},\n      hasIndentation = false;\n\n  for (var state in states) {\n    if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [],\n          orig = states[state];\n\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n  }\n\n  return {\n    startState: function startState() {\n      return {\n        state: \"start\",\n        pending: null,\n        indent: hasIndentation ? [] : null\n      };\n    },\n    copyState: function copyState(state) {\n      var s = {\n        state: state.state,\n        pending: state.pending,\n        indent: state.indent && state.indent.slice(0)\n      };\n      if (state.stack) s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    languageData: meta\n  };\n}\n;\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val;\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n\n  for (var i = 0; i < val.length; i++) {\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  }\n\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function (stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent) state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent) state.indent.pop();\n        var token = rule.token;\n        if (token && token.apply) token = token(matches);\n\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n\n          for (var j = 2; j < matches.length; j++) {\n            if (matches[j]) state.pending.push({\n              text: matches[j],\n              token: rule.token[j - 1]\n            });\n          }\n\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function (state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1) return null;\n    var pos = state.indent.length - 1,\n        rules = states[state.state];\n\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n\n      break;\n    }\n\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}"],"sourceRoot":""}