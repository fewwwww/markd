{"version":3,"sources":["../node_modules/@codemirror/legacy-modes/mode/brainfuck.js"],"names":["reserve","split","brainfuck","startState","commentLine","left","right","commentLoop","token","stream","state","eatSpace","sol","ch","next","toString","indexOf","eol"],"mappings":"oGAAA,qDAAIA,EAAU,WAAWC,MAAM,IAepBC,EAAY,CACrBC,WAAY,WACV,MAAO,CACLC,aAAa,EACbC,KAAM,EACNC,MAAO,EACPC,aAAa,IAGjBC,MAAO,SAAeC,EAAQC,GAC5B,GAAID,EAAOE,WAAY,OAAO,KAE1BF,EAAOG,QACTF,EAAMN,aAAc,GAGtB,IAAIS,EAAKJ,EAAOK,OAAOC,WAEvB,OAA6B,IAAzBf,EAAQgB,QAAQH,IAyBlBH,EAAMN,aAAc,EAEhBK,EAAOQ,QACTP,EAAMN,aAAc,GAGf,YA9BmB,IAAtBM,EAAMN,aACJK,EAAOQ,QACTP,EAAMN,aAAc,GAGf,WAGE,MAAPS,GAAqB,MAAPA,GACL,MAAPA,EACFH,EAAML,OAENK,EAAMJ,QAGD,WACS,MAAPO,GAAqB,MAAPA,EAChB,UACS,MAAPA,GAAqB,MAAPA,EAChB,OACS,MAAPA,GAAqB,MAAPA,EAChB,WAYPJ,EAAOQ,QACTP,EAAMN,aAAc","file":"static/js/28.d69e81b5.chunk.js","sourcesContent":["var reserve = \"><+-.,[]\".split(\"\");\n/*\n  comments can be either:\n  placed behind lines\n\n  +++    this is a comment\n\n  where reserved characters cannot be used\n  or in a loop\n  [\n  this is ok to use [ ] and stuff\n  ]\n  or preceded by #\n*/\n\nexport var brainfuck = {\n  startState: function startState() {\n    return {\n      commentLine: false,\n      left: 0,\n      right: 0,\n      commentLoop: false\n    };\n  },\n  token: function token(stream, state) {\n    if (stream.eatSpace()) return null;\n\n    if (stream.sol()) {\n      state.commentLine = false;\n    }\n\n    var ch = stream.next().toString();\n\n    if (reserve.indexOf(ch) !== -1) {\n      if (state.commentLine === true) {\n        if (stream.eol()) {\n          state.commentLine = false;\n        }\n\n        return \"comment\";\n      }\n\n      if (ch === \"]\" || ch === \"[\") {\n        if (ch === \"[\") {\n          state.left++;\n        } else {\n          state.right++;\n        }\n\n        return \"bracket\";\n      } else if (ch === \"+\" || ch === \"-\") {\n        return \"keyword\";\n      } else if (ch === \"<\" || ch === \">\") {\n        return \"atom\";\n      } else if (ch === \".\" || ch === \",\") {\n        return \"def\";\n      }\n    } else {\n      state.commentLine = true;\n\n      if (stream.eol()) {\n        state.commentLine = false;\n      }\n\n      return \"comment\";\n    }\n\n    if (stream.eol()) {\n      state.commentLine = false;\n    }\n  }\n};"],"sourceRoot":""}